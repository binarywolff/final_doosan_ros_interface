<?xml version="1.0"?>

<launch>
  <arg name="gui"   default="true"/>
  <arg name="rviz"  default="False"/>
  <arg name="world" default="empty.world"/>
  <arg name="host" default="127.0.0.1"/>
  <arg name="port" default="12345"/>
  <arg name="mode" default="virtual"/>
  <arg name="model" default="m1013"/>
  <arg name="color" default="white"/>
  <arg name="gripper" default="none"/>
  <arg name="mobile" default="none"/>
      <arg name="remap"   default="False"/>


  <!-- Start Gazebo with an empty world.
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="true"/>
    <arg name="gui"          value="$(arg gui)"/>
    <arg name="world_name"   value="$(find dsr_launcher)/worlds/$(arg world)"/>
  </include> -->

  <!-- Spawn the arms. -->
  <!-- include file="$(find dsr_bringup)/launch/dsr_base.launch"-->
  <include file="$(find dsr_gazebo)/launch/dsr_base.launch">
    <arg name="ns"            value="dsr01"/>
    <arg name="host"          value="$(arg host)"/>
    <arg name="port"          value="$(arg port)"/>
    <arg name="mode"          value="$(arg mode)"/>
    <arg name="model"         value="$(arg model)"/>
    <arg name="color"         value="$(arg color)"/>
    <arg name="gripper"       value="$(arg gripper)"/>
    <arg name="mobile"        value="$(arg mobile)"/>
    <arg name="rviz"        value="$(arg rviz)"/>

    <arg name="x"             value="0"/>
    <arg name="y"             value="0"/>
    <arg name="yaw"           value="0"/>
  </include>

<group if="$(eval arg('remap') == False)">
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen" respawn="false">
        </node>

        <!-- Send joint values 
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
        <param name="/use_gui" value="true"/>
        </node>-->
        
</group>

    <group if="$(eval arg('remap') == True)">
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen" respawn="false">
            <remap from="/joint_states" to="$(arg ns)$(arg model)/joint_states"/>
        </node>
    </group>

   <node name="ros_api_node" pkg="rosapi" type="rosapi_node" /> 
   
   <node name="joint_states_subscriber_and_publisher" pkg="dsr_example_py" type="joints_position_listener_publisher.py" /> 
  
  <!-- <param name="use_gui" type="bool" value="true" />  
  this next node gives control over the joints -->

  <node name="tf2_web_republisher" pkg="tf2_web_republisher" type="tf2_web_republisher" />
  <node name="rosbridge_websocket" pkg="rosbridge_server" type="rosbridge_websocket" />
  
  
  <!--<node name="map_server" pkg="map_server" type="map_server" args="/home/dario/maps/rail_maps/ilab.pgm 0.05" />-->

  
  <!-- View in RVIZ. -->
  <group if="$(arg rviz)">
    <node name="dmodel" pkg="dsr_launcher" type="dmodel.py"/>
  </group>
</launch>
